<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.GetParentRecord</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Get the parent record of a given record if it is possible.</description>
        <name>GetParentRecord</name>
        <script><![CDATA[function GetParentRecord(strTable,strSysId)
{
	if (IsValidTable(strTable) == false)
	{
		return false;
	}
	var grRecord = GetRecord(strTable,strSysId);
	if (grRecord == false)
	{
		return false;
	}

	var grParentRecord = false;
	var eps = new GlideScriptedExtensionPoint().getExtensions('DevTools');
	eps.forEach(function(ep)
	{
		if (grParentRecord == false)
		{
			grParentRecord = ep.GetParentRecord(grRecord);
		}
	});
	if (grParentRecord != false)
	{
		return grParentRecord;
	}

	
	// ATF test suite to parent test suite
	if (strTable == 'sys_atf_test_suite')
	{
		return GetRecord('sys_atf_test_suite',grRecord.parent);
	}	

	// ATF test to suite
	if (strTable == 'sys_atf_test')
	{
		var grTestSuiteTest = new GlideRecord('sys_atf_test_suite_test');
		grTestSuiteTest.addQuery('test','=',grRecord.sys_id);
		grTestSuiteTest.addQuery('sys_scope','=',grRecord.sys_scope);
		grTestSuiteTest.query();
		if (grTestSuiteTest.getRowCount() == 1) // Only if the test is part of exactly one suite in the same scope!
		{
			grTestSuiteTest.next();
			var strSuiteSysId = GetStringValue(grTestSuiteTest.test_suite);
			return GetRecord('sys_atf_test_suite',strSuiteSysId);
		}
		
		var grTestSuiteTest = new GlideRecord('sys_atf_test_suite_test');
		grTestSuiteTest.addQuery('test','=',grRecord.sys_id);
		grTestSuiteTest.query();
		if (grTestSuiteTest.getRowCount() == 1) // Only if the test is part of exactly one suite in any scope!
		{
			grTestSuiteTest.next();
			var strSuiteSysId = GetStringValue(grTestSuiteTest.test_suite);
			return GetRecord('sys_atf_test_suite',strSuiteSysId);
		}	
		return false;
	}

	// ATF test step to test
	if (strTable == 'sys_atf_step')
	{
		return GetRecord('sys_atf_test',grRecord.test);
	}
	
	// ATF test result to test (or suite result)
	if (strTable == 'sys_atf_test_result')
	{
		var strParent = GetStringValue(grRecord.parent);
		if (IsValidSysId(strParent))
		{
			return GetRecord('sys_atf_test_suite_result',strParent);	
		}
		return GetRecord('sys_atf_test',grRecord.test);
	}
	
	// ATF Test suite result to test
	if (strTable == 'sys_atf_test_suite_result')
	{
		return GetRecord('sys_atf_test_suite',grRecord.test_suite);
	}
	
	// DB View table to DB view
	if (strTable == 'sys_db_view_table')
	{
		return GetRecord('sys_db_view',grRecord.view);
	}

	// DB View table field to DB view table
	if (strTable == 'sys_db_view_table_field')
	{
		return GetRecord('sys_db_view_table',grRecord.view_table);
	}
	
	// Incident task to incident
	if (strTable == 'incident_task')
	{
		return GetRecord('incident',grRecord.incident);
	}

	// Change task to change request
	if (strTable == 'change_task')
	{
		return GetRecord('change_request',grRecord.change_request);
	}

	// Problem task to problem
	if (strTable == 'problem_task')
	{
		return GetRecord('problem',grRecord.problem);
	}

	// sc task to sc req item
	if (strTable == 'sc_task')
	{
		return GetRecord('sc_req_item',grRecord.request_item);
	}

	// sc req item to sc request
	if (strTable == 'sc_req_item')
	{
		return GetRecord('sc_request',grRecord.request);
	}

	// workspace list to workspace list category
	if (strTable == 'sys_aw_list')
	{
		return GetRecord('sys_aw_list_category',grRecord.category);
	}
	
	// workspace list category to workspace
	if (strTable == 'sys_aw_list_category')
	{
		return GetRecord('sys_aw_master_config',grRecord.workspace);
	}
	
	
	return false;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-09-08 12:44:48</sys_created_on>
        <sys_id>9934e6141b6abc505331b8449b4bcbdd</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_name>GetParentRecord</sys_name>
        <sys_package display_value="DevTools WORK IN PROGRESS" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DevTools WORK IN PROGRESS">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_9934e6141b6abc505331b8449b4bcbdd</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-09-17 06:46:50</sys_updated_on>
    </sys_script_include>
</record_update>
