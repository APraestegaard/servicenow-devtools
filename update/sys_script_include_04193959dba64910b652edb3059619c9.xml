<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.WhatRuns</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Identifies business rules that run for the given tables in the different CRUD operations.</description>
        <name>WhatRuns</name>
        <script><![CDATA[function WhatRuns(vTables)
{
	var aTables = GetArrayValue(vTables);
	
	var whatruns = {};
	
	for (var nTable = 0; nTable < aTables.length; nTable++)
	{
		var strTable = aTables[nTable];
		if (IsValidTable(strTable) == true)
		{
			var whatruns_table = {};
			
			
			var aParentTables = Array();
			var strParentTable = GetParentTable(strTable);
			while (strParentTable != '')
			{
				aParentTables.push(strParentTable);
				strParentTable = GetParentTable(strParentTable);
			}
			

			// INSERT
			var aWhatRuns = Array();
			
				// BEFORE
				var grBR = new GlideRecord('sys_script');
				grBR.addActiveQuery();
				var condition = grBR.addQuery('collection','=',strTable);
				for (var nParentTable = 0; nParentTable < aParentTables.length; nParentTable++)
				{
					condition.addOrCondition('collection','=',aParentTables[nParentTable]);
				}
				grBR.addQuery('action_insert','=','true');
				grBR.addQuery('when','=','before');
				grBR.orderBy('order');
				grBR.query();
				while (grBR.next())
				{
					var whatruns_object = {};
					whatruns_object['phase'] = 'before';
					whatruns_object['order'] = GetIntegerValue(grBR.order);
					whatruns_object['class_name'] = 'sys_script';
					whatruns_object['sys_id'] = GetStringValue(grBR.sys_id);
					whatruns_object['class_display_name'] = 'Business Rule';
					whatruns_object['table'] = GetStringValue(grBR.collection);
					whatruns_object['name'] = GetStringValue(grBR.name);
					aWhatRuns.push(whatruns_object); 
				}
			
				// AFTER
				var grBR = new GlideRecord('sys_script');
				grBR.addActiveQuery();
				grBR.addQuery('collection','=',strTable); // also consider parent tables!
				for (var nParentTable = 0; nParentTable < aParentTables.length; nParentTable++)
				{
					condition.addOrCondition('collection','=',aParentTables[nParentTable]);
				}
				grBR.addQuery('action_insert','=','true');
				grBR.addQuery('when','=','after');
				grBR.orderBy('order');
				grBR.query();
				while (grBR.next())
				{
					var whatruns_object = {};
					whatruns_object['phase'] = 'after';
					whatruns_object['order'] = GetIntegerValue(grBR.order);
					whatruns_object['class_name'] = 'sys_script';
					whatruns_object['sys_id'] = GetStringValue(grBR.sys_id);
					whatruns_object['class_display_name'] = 'Business Rule';
					whatruns_object['table'] = GetStringValue(grBR.collection);
					whatruns_object['name'] = GetStringValue(grBR.name);
					aWhatRuns.push(whatruns_object); 
				}			
			
				whatruns_table['insert'] = aWhatRuns;

			
			// UPDATE	
			var aWhatRuns = Array();
			
				// BEFORE
				var grBR = new GlideRecord('sys_script');
				grBR.addActiveQuery();
				grBR.addQuery('collection','=',strTable); // also consider parent tables!
				for (var nParentTable = 0; nParentTable < aParentTables.length; nParentTable++)
				{
					condition.addOrCondition('collection','=',aParentTables[nParentTable]);
				}
				grBR.addQuery('action_update','=','true');
				grBR.addQuery('when','=','before');
				grBR.orderBy('order');
				grBR.query();
				while (grBR.next())
				{
					var whatruns_object = {};
					whatruns_object['phase'] = 'before';
					whatruns_object['order'] = GetIntegerValue(grBR.order);
					whatruns_object['class_name'] = 'sys_script';
					whatruns_object['sys_id'] = GetStringValue(grBR.sys_id);
					whatruns_object['class_display_name'] = 'Business Rule';
					whatruns_object['table'] = GetStringValue(grBR.collection);
					whatruns_object['name'] = GetStringValue(grBR.name);
					aWhatRuns.push(whatruns_object); 
				}
			
				// AFTER
				var grBR = new GlideRecord('sys_script');
				grBR.addActiveQuery();
				grBR.addQuery('collection','=',strTable); // also consider parent tables!
				for (var nParentTable = 0; nParentTable < aParentTables.length; nParentTable++)
				{
					condition.addOrCondition('collection','=',aParentTables[nParentTable]);
				}
				grBR.addQuery('action_update','=','true');
				grBR.addQuery('when','=','after');
				grBR.orderBy('order');
				grBR.query();
				while (grBR.next())
				{
					var whatruns_object = {};
					whatruns_object['phase'] = 'after';
					whatruns_object['order'] = GetIntegerValue(grBR.order);
					whatruns_object['class_name'] = 'sys_script';
					whatruns_object['sys_id'] = GetStringValue(grBR.sys_id);
					whatruns_object['class_display_name'] = 'Business Rule';
					whatruns_object['table'] = GetStringValue(grBR.collection);
					whatruns_object['name'] = GetStringValue(grBR.name);
					aWhatRuns.push(whatruns_object); 
				}			
			
				whatruns_table['update'] = aWhatRuns;
			
			
			// QUERY
			var aWhatRuns = Array();
			
				// BEFORE
				var grBR = new GlideRecord('sys_script');
				grBR.addActiveQuery();
				grBR.addQuery('collection','=',strTable); // also consider parent tables!
				for (var nParentTable = 0; nParentTable < aParentTables.length; nParentTable++)
				{
					condition.addOrCondition('collection','=',aParentTables[nParentTable]);
				}
				grBR.addQuery('action_query','=','true');
				grBR.addQuery('when','=','before');
				grBR.orderBy('order');
				grBR.query();
				while (grBR.next())
				{
					var whatruns_object = {};
					whatruns_object['phase'] = 'before';
					whatruns_object['order'] = GetIntegerValue(grBR.order);
					whatruns_object['class_name'] = 'sys_script';
					whatruns_object['sys_id'] = GetStringValue(grBR.sys_id);
					whatruns_object['class_display_name'] = 'Business Rule';
					whatruns_object['table'] = GetStringValue(grBR.collection);
					whatruns_object['name'] = GetStringValue(grBR.name);
					aWhatRuns.push(whatruns_object); 
				}
			
				// AFTER
				var grBR = new GlideRecord('sys_script');
				grBR.addActiveQuery();
				grBR.addQuery('collection','=',strTable); // also consider parent tables!
				for (var nParentTable = 0; nParentTable < aParentTables.length; nParentTable++)
				{
					condition.addOrCondition('collection','=',aParentTables[nParentTable]);
				}
				grBR.addQuery('action_query','=','true');
				grBR.addQuery('when','=','after');
				grBR.orderBy('order');
				grBR.query();
				while (grBR.next())
				{
					var whatruns_object = {};
					whatruns_object['phase'] = 'after';
					whatruns_object['order'] = GetIntegerValue(grBR.order);
					whatruns_object['class_name'] = 'sys_script';
					whatruns_object['sys_id'] = GetStringValue(grBR.sys_id);
					whatruns_object['class_display_name'] = 'Business Rule';
					whatruns_object['table'] = GetStringValue(grBR.collection);
					whatruns_object['name'] = GetStringValue(grBR.name);
					aWhatRuns.push(whatruns_object); 
				}			
			
				// ASYNC
			
				whatruns_table['query'] = aWhatRuns;
			
			whatruns[strTable] = whatruns_table;
		}
	}
	return whatruns;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-29 08:27:19</sys_created_on>
        <sys_id>04193959dba64910b652edb3059619c9</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>WhatRuns</sys_name>
        <sys_package display_value="DevTools WORK IN PROGRESS" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DevTools WORK IN PROGRESS">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_04193959dba64910b652edb3059619c9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-03-31 10:28:58</sys_updated_on>
    </sys_script_include>
</record_update>
