<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.AppBuilder</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>AppBuilder adds various application files to a scoped app.</description>
        <name>AppBuilder</name>
        <script><![CDATA[function AppBuilder(strAppSysIdOrScopeName, strAppMenuSysId)
{
	function Log(strText)
	{
		x_snc_devtools.Log('DevTools AppBuilder: '+strText);
	}
	
	var strAppSysId = '';
	var strAppScope = '';
	var grApp = false;
	
	if (IsValidSysId(strAppSysIdOrScopeName) == false)
	{
		strAppScope = strAppSysIdOrScopeName;
		grApp = new GlideRecord('sys_app');
		grApp.addQuery('scope','=',strAppSysIdOrScopeName);
		grApp.query();
		if (grApp.getRowCount() != 1)
		{
			Log('Error: App not found with scope name: '+strAppScope);
			return false;
		}
		grApp.next();
		strAppSysId = grApp.sys_id; 
	}
	else
	{
		strAppSysId = strAppSysIdOrScopeName;
		grApp = GetRecord('sys_app',strAppSysId);
		if (grApp == false)
		{
			Log('Error: App not found with sys_id: '+strAppSysId);
			return false;
		}
		strAppScope = GetStringValue(grApp.scope);
	}
	
	var strAppName = GetAppName(strAppSysId);
	
	Log('Working on app "'+strAppName+'" ('+strAppScope+')');
	
	var grAppDevTools = GetRecord('sys_app','d689f6901bd38450a89720a8ec4bcbfd');
	var strDevToolsVersion = '';
	if (grAppDevTools != false)
	{
		strDevToolsVersion = GetStringValue(grAppDevTools.version);
	}
	
	
	// Adding script include "Log"
	var grSSI = new GlideRecord('sys_script_include');
	grSSI.addQuery('sys_scope','=',strAppSysId);
	grSSI.addQuery('name','=','Log');
	grSSI.query();
	if (grSSI.next() == false)
	{
		Log('Adding script include "Log"');
		var grSSI = new GlideRecord('sys_script_include');
		grSSI.initialize();
		grSSI.name = 'Log';
		grSSI.description = "Produces a log output in the application log.";
		grSSI.sys_scope = strAppSysId;
		grSSI.access = 'public';
		grSSI.caller_access = '1';
		grSSI.script =
			"function Log(strText)\n"
			+"{\n"
			+"\tx_snc_devtools.Log('"+strAppName+": '+gs.getUserName()+': '+strText);\n"
			+"}";
		GlideRecordInsert(grSSI);
	}
	
	// Adding script include "Debug"
	var grSSI = new GlideRecord('sys_script_include');
	grSSI.addQuery('sys_scope','=',strAppSysId);
	grSSI.addQuery('name','=','Debug');
	grSSI.query();
	if (grSSI.next() == false)
	{
		Log('Adding script include "Debug"');
		var grSSI = new GlideRecord('sys_script_include');
		grSSI.initialize();
		grSSI.name = 'Debug';
		grSSI.description = "Produces a log output in the application log using the DevTools Debug function.";
		grSSI.sys_scope = strAppSysId;
		grSSI.access = 'public';
		grSSI.caller_access = '1';
		grSSI.script =
			"function Debug(strText)\n"
			+"{\n"
			+"\tx_snc_devtools.Debug('"+strAppName+": '+gs.getUserName()+': '+strText);\n"
			+"}";
		GlideRecordInsert(grSSI);
	}	
	
	
	// Adding script include "AppSetProperty"
	var grSSI = new GlideRecord('sys_script_include');
	grSSI.addQuery('sys_scope','=',strAppSysId);
	grSSI.addQuery('name','=','AppSetProperty');
	grSSI.query();
	if (grSSI.next() == false)
	{
		Log('Adding script include "AppSetProperty"');
		var grSSI = new GlideRecord('sys_script_include');
		grSSI.initialize();
		grSSI.name = 'AppSetProperty';
		grSSI.description = "Sets a system property of this application.";
		grSSI.sys_scope = strAppSysId;
		grSSI.access = 'public';
		grSSI.caller_access = '1';
		grSSI.script =
			"function AppSetProperty(strSuffix,vValue)\n"
			+"{\n"
			+"\tvar strName = '"+strAppScope+".'+strSuffix;\n"
			+"\tif (IsProperty(strName) == false)\n"
			+"\t{\n"
			+"\t\treturn false;\n"
			+"\t}\n"
			+"\tgs.setProperty(strName,vValue);\n"
			+"\treturn true;\n"
			+"}\n";
		GlideRecordInsert(grSSI);
	}	
	
	
	// Adding script include "AppGetDependencies"
	var grSSI = new GlideRecord('sys_script_include');
	grSSI.addQuery('sys_scope','=',strAppSysId);
	grSSI.addQuery('name','=','AppGetDependencies');
	grSSI.query();
	if (grSSI.next() == false)
	{
		Log('Adding script include "AppGetDependencies"');
		var grSSI = new GlideRecord('sys_script_include');
		grSSI.initialize();
		grSSI.name = 'AppGetDependencies';
		grSSI.description = "Retrieves information about the app's dependencies to other apps and required versions.";
		grSSI.sys_scope = strAppSysId;
		grSSI.access = 'public';
		grSSI.caller_access = '1';
		grSSI.script =
			"function AppGetDependencies()\n"
			+"{\n"
			+"\treturn [\n"
			+"\t\t{\n"
			+"\t\t\tname: 'DevTools',\n"
			+"\t\t\tversion: '"+strDevToolsVersion+"',\n"
			+"\t\t\turl: 'https://github.com/saschawildgrube/servicenow-devtools/',\n"
			+"\t\t\twebsite_url: 'https://www.wildgrube.com/servicenow-devtools'\n"
			+"\t\t}\n"
			+"\t];\n"
			+"}";
		GlideRecordInsert(grSSI);
	}
	
	
/*	
	// Adding module "Options"
	var grSAM = new GlideRecord('sys_app_module');
	grSAM.addQuery('sys_scope','=',strAppSysId);
	grSAM.addQuery('title','CONTAINS','Options');
	grSAM.query();
	if (grSAM.next() == false)
	{
		Log('Adding module "Options"');
		var grSAM = new GlideRecord('sys_app_module');
		grSAM.initialize();
		grSAM.title = 'Options';
		grSAM.sys_scope = strAppSysId;
		grSAM.link_type = 'DIRECT';
		//grSAM.query = "system_properties_ui.do?sysparm_title=DevTools%20Options&sysparm_category=devtools";
		GlideRecordInsert(grSAM);
	}	
*/	
	
	
/*
function AppGetDependencies()
{
	return [
		{
			name: 'DevTools',
			version: '1.22.0',
			url: 'https://github.com/saschawildgrube/servicenow-devtools/',
			website_url: 'https://www.wildgrube.com/servicenow-devtools'
		}
	];
}

*/
	
	strAppMenuSysId = GetStringValue(strAppMenuSysId);
	var grAppMenu = false;
	if (IsValidSysId(strAppMenuSysId) == true)
	{
		var grAppMenu = GetRecord('sys_app_application',strAppMenuSysId);
		if (grAppMenu == false)
		{
			Log('Given application menu was not found!');
		}
	}
	if (grAppMenu == false)
	{
		Log('Creating a new application menu...');
		grAppMenu = new GlideRecord('sys_app_application');
		grAppMenu.initialize();
		grAppMenu.active = true;
		grAppMenu.category = 'e0355b31ef303000a61d5a3615c0fb78'; // "Custom Applications"
		grAppMenu.device_type = 'browser';
		grAppMenu.hint = grApp.short_description;
		grAppMenu.description = grApp.short_description;
		grAppMenu.sys_scope = strAppSysId;
		grAppMenu.title = strAppName;
		GlideRecordInsert(grAppMenu);
		
	}
	if (IsValidRecord(grAppMenu))
	{
		Log('Adding application menu modules...');
			
	}
		
	
	
	
	Log('Done.');
	return grApp;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-09-07 15:15:09</sys_created_on>
        <sys_id>753cb10c1b6afc50577f43b5bb4bcb58</sys_id>
        <sys_mod_count>27</sys_mod_count>
        <sys_name>AppBuilder</sys_name>
        <sys_package display_value="DevTools WORK IN PROGRESS" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DevTools WORK IN PROGRESS">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_753cb10c1b6afc50577f43b5bb4bcb58</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-09-28 15:09:50</sys_updated_on>
    </sys_script_include>
</record_update>
