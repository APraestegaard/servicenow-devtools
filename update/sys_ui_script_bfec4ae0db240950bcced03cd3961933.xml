<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>Formats record field values in table cells. The script works both on list views as well as on related lists on forms.</description>
        <global>true</global>
        <name>x_snc_devtools.FormatListViews</name>
        <script><![CDATA[(function(){
	
	var bFormatInProgress = false;
	
	var cache = {};

	function Log(strText)
	{
		console.log('DevTools: FormatListViews: UI Script: '+strText);
	}

	function FormatTableRow(elementRow,aColumns)
	{
		var strRecordClass = ''+elementRow.getAttribute('record_class');
		var strSysId = ''+elementRow.getAttribute('sys_id');

		if (strRecordClass != '' && strSysId != '')
		{
			
			function FormatTableCells(elementRow,aColumns,formatconfig)
			{
				var aCells = elementRow.getElementsByTagName('td');
				for (var nCell = 0; nCell < aCells.length; nCell++)
				{
					var element = aCells[nCell];
					var strColumn = aColumns[nCell];
					var columnconfig = formatconfig[strColumn];
					if (columnconfig != null)
					{
						element.textContent = FormatValue(element.textContent,columnconfig);
					}
				}
			}
			
			var formatconfig = GetValue(cache,strRecordClass,strSysId);
			if (formatconfig != null)
			{
				FormatTableCells(elementRow,aColumns,formatconfig);
			}
			else
			{
				//Log('Requesting format config for record: '+strRecordClass+': '+strSysId);
				var ga = new GlideAjax('x_snc_devtools.DevToolsClientAPI');
				ga.addParam('sysparm_name','GetFormatConfig');
				ga.addParam('sysparm_table',strRecordClass);
				ga.addParam('sysparm_sys_id',strSysId);
				ga.getXML(Response_GetFormatConfig);
				function Response_GetFormatConfig(response)
				{
					//Log('DevToolsClientAPI::GetFormatConfig RESPONSE...');
					var formatconfig = response.responseXML.documentElement.getAttribute('answer');
					if (formatconfig == 'false')
					{
						//Log('Could not retrieve format config.');
						return;
					}
					try
					{
						formatconfig = JSON.parse(formatconfig);
					}
					catch (e)
					{
						Log('Could not parse format config.');
						return;
					}

					if (cache[strRecordClass] == undefined)
					{
						cache[strRecordClass] = {};
					}
					cache[strRecordClass][strSysId] = formatconfig;
					FormatTableCells(elementRow,aColumns,formatconfig);
				}	
			}
		}
	}

	function FormatTable(elementTable)
	{
		var strTable = ''+elementTable.getAttribute('data-list_id');
		if (strTable != '')
		{
			var aTableHeader = elementTable.getElementsByTagName('thead');

			if (aTableHeader.length > 0)
			{
				var aColumns = [];

				var aRows = aTableHeader[0].getElementsByTagName('tr');
				for (var nRow = 0; nRow < aRows.length; nRow++)
				{
					var elementRow = aRows[nRow];
					if (elementRow.id.indexOf('hdr_') == 0)
					{
						var aCells = elementRow.getElementsByTagName('th');
						for (var nCell = 0; nCell < aCells.length; nCell++)
						{
							var elementCell = aCells[nCell];
							aColumns.push(''+elementCell.getAttribute('name'));
						}
					}
				}

				if (aColumns.length > 0)
				{
					var aTableBodies = elementTable.getElementsByTagName('tbody');
					if (aTableBodies.length > 0)
					{
						var aRows = aTableBodies[0].getElementsByTagName('tr');
						for (var nRow = 0; nRow < aRows.length; nRow++)
						{
							var elementRow = aRows[nRow];
							FormatTableRow(elementRow,aColumns)
						}
					}
				}
			}
		}
	}


	function FormatDocument(doc)
	{
		var aFrames = doc.getElementsByTagName('iframe');
		//console.log(aFrames);

		for (var nFrame = 0; nFrame < aFrames.length; nFrame++)
		{
			var elementFrame = aFrames[nFrame];
			//Log(elementFrame.getAttribute('id'));
			FormatDocument(elementFrame.contentWindow.document);
		}

		var aTables = doc.getElementsByTagName('table');
		//console.log(aTables);
		for (var nTable = 0; nTable < aTables.length; nTable++)
		{
			var elementTable = aTables[nTable];
			FormatTable(elementTable);
		}

	
	}



	function Format()
	{
		if (bFormatInProgress == true)
		{
			//Log('Format: Already in progress: skipping!');
			return;
		}
		//Log('Format: START');
		bFormatInProgress = true;
		FormatDocument(top.document);
		bFormatInProgress = false;
	}
	
	function callbackObserver(m)
	{
		//Log('callbackObserver');
		//console.log(m);
		Format();
	}
	
	
	function callbackTimeout()
	{
		Format();
		
		var aFrames = top.document.getElementsByTagName('iframe');
		//console.log(aFrames);

		for (nFrame = 0; nFrame < aFrames.length; nFrame++)
		{
			var elementFrame = aFrames[nFrame];
			//Log(elementFrame.getAttribute('id'));
			var aObserved = elementFrame.contentWindow.document.getElementsByTagName('div');
			//console.log(aTables);
			
			for (var nElement = 0; nElement < aObserved.length; nElement++)
			{
				var elementObserved = aObserved[nElement]; 
				var strId = ''+elementObserved.id;
				var strClasses = ''+elementObserved.className;
				//if (strId.indexOf('_table') != -1)
				//if (strId != '')
				if (strClasses.indexOf('list_div') != -1)
				{
					//Log('Observing element: '+strId);
					ObserveDOM(elementObserved,callbackObserver);
					//observeDOM(elementObserved,callbackObserver);
				}
			}
		}	
	}
	
	setTimeout(callbackTimeout, 1000);
	
	
})();
]]></script>
        <script_name>FormatListViews</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-12-17 15:48:08</sys_created_on>
        <sys_id>bfec4ae0db240950bcced03cd3961933</sys_id>
        <sys_mod_count>107</sys_mod_count>
        <sys_name>x_snc_devtools.FormatListViews</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevTools WORK IN PROGRESS">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_ui_script_bfec4ae0db240950bcced03cd3961933</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-12-23 17:01:53</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
